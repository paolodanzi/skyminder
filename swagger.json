{
  "swagger" : "2.0",
  "info" : {
    "description" : "Description of sky Sky REST API",
    "version" : "1",
    "title" : "Sky REST API",
    "termsOfService" : "TERMS OF SERVICE URL",
    "contact" : {
      "name" : "NAME",
      "url" : "URL",
      "email" : "EMAIL"
    },
    "license" : {
      "name" : "LICENSE",
      "url" : "LICENSE URL"
    }
  },
  "host" : "localhost:8080",
  "basePath" : "/",
  "tags" : [ {
    "name" : "person-controller",
    "description" : "Person Controller"
  } ],
  "paths" : {
    "/v2/persons/" : {
      "get" : {
        "tags" : [ "person-controller" ],
        "summary" : "getAllPersons",
        "operationId" : "getAllPersonsUsingGET",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Person"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "person-controller" ],
        "summary" : "createPerson",
        "operationId" : "createPersonUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "person",
          "description" : "person",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Person"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Person"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/v2/persons/{id}" : {
      "get" : {
        "tags" : [ "person-controller" ],
        "summary" : "getPersonById",
        "operationId" : "getPersonByIdUsingGET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Person"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "person-controller" ],
        "summary" : "deletePerson",
        "operationId" : "deletePersonUsingDELETE",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    }
  },
  "definitions" : {
    "Person" : {
      "type" : "object",
      "properties" : {
        "age" : {
          "type" : "integer",
          "format" : "int32"
        },
        "firstName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastName" : {
          "type" : "string"
        }
      },
      "title" : "Person"
    }
  }
}